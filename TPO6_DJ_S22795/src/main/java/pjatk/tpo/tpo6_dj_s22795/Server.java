package pjatk.tpo.tpo6_dj_s22795;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Map;

@WebServlet("/server")
public class Server extends HttpServlet {


    DataSource dataSource;

    public void init() throws ServletException {
        try {
            Context init = new InitialContext();
            Context contx = (Context) init.lookup("java:comp/env");
            dataSource = (DataSource) contx.lookup("jdbc/ksidb");
        } catch (NamingException exc) {
            throw new ServletException(
                    "Nie mogę uzyskać źródła java:comp/env/jdbc/ksidb", exc);
        }
    }

    public void serviceRequest(HttpServletRequest req,
                               HttpServletResponse resp)
            throws IOException {
        resp.setContentType("text/html; charset=windows-1250");
        PrintWriter out = resp.getWriter();
        out.println("<h2>Biblioteka</h2>");

        Connection con = null;
        try {
            synchronized (dataSource) {
                con = dataSource.getConnection();
            }

            Statement stmt = con.createStatement();
            ResultSet rs;

            stmt.execute("drop table POZYCJE");
            stmt.execute("drop table autor");
            stmt.execute("drop table wydawca");

            stmt.execute("create table AUTOR ( AUTID integer not null generated by default as identity," +
                    " NAME varchar(255) not null, PRIMARY KEY(AUTID))");
            stmt.execute("create table WYDAWCA (WYDID integer not null generated by default as identity," +
                    " NAME varchar(255) not null, PRIMARY KEY(WYDID))");
            stmt.execute("create table POZYCJE ( ISBN char(13) not null, AUTID integer not null, TYTUL" +
                    " varchar(255) not null, WYDID integer not null, ROK integer not null, CENA real, PRIMARY" +
                    " KEY(ISBN), FOREIGN KEY(AUTID) REFERENCES AUTOR(AUTID), FOREIGN KEY(WYDID) REFERENCES" +
                    " WYDAWCA(WYDID))");

            stmt.execute("insert into autor values(1,'Miller P. (red.)'), (2,'Chismar J.'), (3,'Błaszczyk')" +
                    ", (4,'Le  B.'), (5,'Cassel P. Eddy C.'), (6,'Mitchell S.'), (7,'Huzar Z. Fryźlewicz Z. Dubil')" +
                    ",(8,'Cytowski J.'),(9,'Banachowski L. Diks K. Rytter'),(10,'Stephens R.'),(11,'Sysło M. Deo N.')" +
                    ",(12,'Wróblewski P.'), (13,'zbiorowa'),(14,'Muller R.'),(15,'Banachowski L.'),(16,'Barteczko K.')" +
                    ",(17,'Arnold K. Gosling J.'),(18,'Bielecki J.'),(19,'Boone B.'),(20,'Harrington J.L.')," +
                    "(21,'Lausen G. Vossen G.')");
            stmt.execute("insert into wydawca values(1,'Helion Wydawnictwo'), (2,'Editions 2000')," +
                    "(3,'PLJ Akademicka Oficyna'),(4,'Wydawnictwo Naukowo-Techniczne')," +
                    "(5,'Państwowe Wydawnictwo Naukowe'),(6,'Politechnika Szczecińska')," +
                    "(7,'Politechnika  Śląska'),(8,'Mikom')");
            stmt.execute("insert into pozycje values" +
                    "('83-7197-252-0',1,'3D Studio MAX 3. Doskonałość i precyzja-suplement',1,2001,41.00)," +
                    " ('83-7197-178-8',2,'3D Studio Max 3. Efektywna animacja w praktyce',1,1999,63.00)," +
                    "('83-87297-70-4',3,'ABC HTML 2001',2,2001,20.00)," +
                    "('83-87297-36-4',4,'ABC Internetu 2000',2,2000,18.50)," +
                    "('83-7197-067-6',5,'Access 97. Baza danych dla każdego',1,1999,66.50)," +
                    "('83-7197-291-1',6,'Active Server Pages 3.0 dla każdego',1,2001,73.00)," +
                    "('83-86718-38-2',7,'ADA 95',1,1998,35.00)," +
                    "('83-7101-255-7',8,'Algorytmy genetyczne. Podstawy i zastosowania',3,1996,11.50)," +
                    "('83-204-1995-6',9,'Algorytmy i struktury danych',4,1996,28.00)," +
                    "('83-7197-131-1',10,'Algorytmy i struktury danych z przykł. w Delphi',1,2000,42.00)," +
                    "('83-01-11818-0',11,'Algorytmy optymalizacji dyskretnej z programami w języku pas',5,2000,44.00)," +
                    "('83-85701-98-2',12,'Algorytmy struktury danych i techniki programowania',1,1996,30.00)," +
                    "('0860-3928',13,'Bazy danych i sieci komputerowe-stan i perspektywy rozwoju',6,1996,7.00)," +
                    "('0434-0825',13,'Bazy danych w lokalnych sieciach komputerowych oraz systemac',7,1994,10.00)," +
                    "('83-7297-000-0',14,'Bazy danych. Język UML w modelowaniu danych',8,2000,56.00)," +
                    "('83-7101-377-9',15,'Bazy danych. Tworzenie aplikacji',3,1998,33.50)," +
                    "('83-7279-066-3',16,'Java. Wykłady i ćwiczenia',8,2000,528.00)," +
                    "('83-204-2313-9',17,'Java',4,1999,672.00),('83-7197-153-2',18,'Java 3',1,1999,1024.00)," +
                    "('83-7197-169-9',18,'Java 3 RMI. Podst. programowania rozproszonego',1,2000,472.00)," +
                    "('83-7197-363-2',18,'Java 4 Swing. t. I/II',1,2000,1280.00)," +
                    "('83-204-2265-5',19,'Java dla programistów C i C++',4,1998,608.00)," +
                    "('83-7279-090-6',20,'Obiektowe bazy danych dla każdego',8,2001,32.00)," +
                    "('83-204-2487-9',21,'Obiektowe bazy danych. Modele danych i języki',4,2000,40.00)");

            out.println("""
                    <form action="#">
                      <label for="tytuł">Tytuł:</label><br>
                      <input type="text" id="tytuł" name="tytuł" value=""><br>
                      <label for="cena">Cena:</label><br>
                      <input type="text" id="cena" name="cena" value=""><br><br>
                      <input type="submit" value="Wyszukaj książkę">
                    </form>
                                        
                    <form method="post" action ="http://localhost:8080/TPO6_DJ_S22795_war_exploded/list">
                    <input type="submit" value="Przeglądaj wszystkie książki">
                    </form>\s
                    """);

            String tytuł="", cena="";

            Map<String, String[]> parameterMap = req.getParameterMap();

            for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) {
                if(entry.getKey().equals("nazwa"))
                    tytuł = entry.getValue()[0];
                else
                    cena = entry.getValue()[0];
            }

            rs = stmt.executeQuery("select * from pozycje where tytul like '%" + tytuł + "%' or cena = " + cena);

            while (rs.next())  {
                String t = rs.getString("tytul");
                float c  = rs.getFloat("cena");
                out.println("<li>" + t + " - cena: " + c + "</li>");
            }

            rs.close();
            stmt.close();
        } catch (Exception exc) {
            out.println(exc.getMessage());
        } finally {
            try {
                con.close();
            } catch (Exception exc) {
            }
        }

        out.close();

    }

    public void doGet(HttpServletRequest request,
                      HttpServletResponse response)
            throws ServletException, IOException {
        serviceRequest(request, response);
    }

    public void doPost(HttpServletRequest request,
                       HttpServletResponse response)
            throws ServletException, IOException {
        serviceRequest(request, response);
    }

}